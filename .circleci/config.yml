version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-28
    working_directory: ~/MobileAppAutomationTest/AndroidDemo
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/MobileAppAutomationTest
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
                   
      - run:
          name: Run Emulator
          background: true
          command: |
            $ANDROID_SDK_ROOT/tools/emulator -no-window -noaudio -no-boot-anim -gpu swiftshader @androidlearn
      - run:
          name: Wait for Emulator
          no_output_timeout: 15m
          command: |
            sleep 15
            $ANDROID_SDK_ROOT/platform-tools/adb devices
            sleep 10
      - run:
          name: Fetch logcat and props
          background: true
          command: |
            $ANDROID_SDK_ROOT/platform-tools/adb logcat >> ./artifacts/logcat.txt
            $ANDROID_SDK_ROOT/platform-tools/adb shell getprop >> ./artifacts/props.txt
      - run:
          name: Run Android Connected Tests
          command: |
            export ADB_INSTALL_TIMEOUT=120
            export ANDROID_HOME=$ANDROID_SDK_ROOT
            # ./scripts/test.sh
            ./gradlew assembleDebug
            # Wait for emulator to fully boot
            # TODO: Need to create a good check
            sleep 60
            # Is the emulator still running?
            adb devices
            # Check if package manager is running
            adb shell pm list packages
            # Install package
            $ANDROID_SDK_ROOT/platform-tools/adb install ~/MobileAppAutomationTest/AndroidDemo/app/build/outputs/apk/debug/app-debug.apk
            ./gradlew connectedAndroidTest
          
      - store_artifacts:
          path: app/build/reports
          destination: reports
          
      - store_test_results:
          path: app/build/test-results
